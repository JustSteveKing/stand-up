name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/standups/{uuid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 9bcdf906-ba6f-4fcb-9789-a1dc14cc1fb0
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uuid: 9bcdf906-ba6f-4fcb-9789-a1dc14cc1fb0
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/standups/{standUp_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      standUp_id:
        name: standUp_id
        description: 'The ID of the standUp.'
        required: true
        example: 9bcdf906-ba6f-4fcb-9789-a1dc14cc1fb0
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      standUp_id: 9bcdf906-ba6f-4fcb-9789-a1dc14cc1fb0
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mood:
        name: mood
        description: ''
        required: true
        example: sick
        type: string
        enumValues:
          - happy
          - sad
          - excited
          - frustrated
          - tired
          - neutral
          - angry
          - anxious
          - optimistic
          - pensive
          - surprised
          - sick
          - confident
          - disappointed
          - amused
          - relieved
          - indifferent
          - grateful
          - inspired
          - confused
        exampleWasSpecified: false
        custom: []
      tasks:
        name: tasks
        description: 'Must be at least 2 characters.'
        required: true
        example: caxncyyokxpqxkhvzllmrqsprvljpnzrvlgrfnrvkbhqnutivfzjsbuoiqdvqwqxv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      blockers:
        name: blockers
        description: 'Must be at least 2 characters.'
        required: false
        example: sramjjgfqztojpmejpaxcidliqrsgsuijvtedhteoasbvbvhvnpidzadoewvjhryjjwonsbvshjate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      questions:
        name: questions
        description: 'Must be at least 2 characters.'
        required: false
        example: lzosfiixyhnkgs
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      comments:
        name: comments
        description: 'Must be at least 2 characters.'
        required: false
        example: zjrgkcrfqlgagrgtyjsdvfbybwyikxuucroairqfkphpxotaznuqwmkekbzxw
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      department:
        name: department
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      mood: sick
      tasks: caxncyyokxpqxkhvzllmrqsprvljpnzrvlgrfnrvkbhqnutivfzjsbuoiqdvqwqxv
      blockers: sramjjgfqztojpmejpaxcidliqrsgsuijvtedhteoasbvbvhvnpidzadoewvjhryjjwonsbvshjate
      questions: lzosfiixyhnkgs
      comments: zjrgkcrfqlgagrgtyjsdvfbybwyikxuucroairqfkphpxotaznuqwmkekbzxw
      department: aut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/standups/{standUp_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      standUp_id:
        name: standUp_id
        description: 'The ID of the standUp.'
        required: true
        example: 9bcdf906-ba6f-4fcb-9789-a1dc14cc1fb0
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      standUp_id: 9bcdf906-ba6f-4fcb-9789-a1dc14cc1fb0
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
